# Generated from Color.g4 by ANTLR 4.10.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,9,59,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,
        4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,
        4,1,4,1,4,1,4,3,4,50,8,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,0,0,9,1,
        1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,1,0,2,8,0,98,100,102,103,106,
        110,112,112,114,116,118,118,120,120,122,122,5,0,97,97,101,101,105,
        105,111,111,117,117,67,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,
        0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,
        0,0,0,1,19,1,0,0,0,3,21,1,0,0,0,5,23,1,0,0,0,7,25,1,0,0,0,9,49,1,
        0,0,0,11,51,1,0,0,0,13,53,1,0,0,0,15,55,1,0,0,0,17,57,1,0,0,0,19,
        20,5,13,0,0,20,2,1,0,0,0,21,22,5,10,0,0,22,4,1,0,0,0,23,24,5,39,
        0,0,24,6,1,0,0,0,25,26,5,32,0,0,26,27,1,0,0,0,27,28,6,3,0,0,28,8,
        1,0,0,0,29,30,5,112,0,0,30,50,5,97,0,0,31,32,5,114,0,0,32,50,5,101,
        0,0,33,34,5,99,0,0,34,50,5,105,0,0,35,36,5,118,0,0,36,50,5,111,0,
        0,37,38,5,109,0,0,38,50,5,117,0,0,39,40,5,120,0,0,40,50,5,97,0,0,
        41,42,5,122,0,0,42,50,5,101,0,0,43,44,5,98,0,0,44,50,5,105,0,0,45,
        46,5,115,0,0,46,50,5,111,0,0,47,48,5,110,0,0,48,50,5,111,0,0,49,
        29,1,0,0,0,49,31,1,0,0,0,49,33,1,0,0,0,49,35,1,0,0,0,49,37,1,0,0,
        0,49,39,1,0,0,0,49,41,1,0,0,0,49,43,1,0,0,0,49,45,1,0,0,0,49,47,
        1,0,0,0,50,10,1,0,0,0,51,52,5,121,0,0,52,12,1,0,0,0,53,54,5,113,
        0,0,54,14,1,0,0,0,55,56,7,0,0,0,56,16,1,0,0,0,57,58,7,1,0,0,58,18,
        1,0,0,0,2,0,49,1,6,0,0
    ]

class ColorLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    WS = 4
    PA = 5
    Y = 6
    Q = 7
    C = 8
    V = 9

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'\\r'", "'\\n'", "'''", "' '", "'y'", "'q'" ]

    symbolicNames = [ "<INVALID>",
            "WS", "PA", "Y", "Q", "C", "V" ]

    ruleNames = [ "T__0", "T__1", "T__2", "WS", "PA", "Y", "Q", "C", "V" ]

    grammarFileName = "Color.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


