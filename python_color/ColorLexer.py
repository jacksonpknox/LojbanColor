# Generated from Color.g4 by ANTLR 4.10.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,9,320,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,
        7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
        2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,
        7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,
        2,33,7,33,2,34,7,34,2,35,7,35,1,0,1,0,1,1,1,1,1,2,3,2,79,8,2,1,2,
        5,2,82,8,2,10,2,12,2,85,9,2,1,2,1,2,1,2,1,3,1,3,3,3,92,8,3,1,4,1,
        4,1,5,1,5,1,6,1,6,1,6,1,6,1,7,1,7,1,8,1,8,3,8,106,8,8,1,9,1,9,1,
        9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,
        1,11,1,11,1,11,3,11,127,8,11,1,12,1,12,1,12,1,12,1,13,1,13,3,13,
        135,8,13,1,13,3,13,138,8,13,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,
        15,1,16,1,16,3,16,150,8,16,1,16,3,16,153,8,16,1,16,1,16,1,17,1,17,
        1,17,1,17,1,18,1,18,3,18,163,8,18,1,18,1,18,1,19,1,19,3,19,169,8,
        19,1,19,1,19,1,19,1,19,3,19,175,8,19,1,19,1,19,1,20,1,20,3,20,181,
        8,20,1,20,1,20,1,20,1,20,5,20,187,8,20,10,20,12,20,190,9,20,1,20,
        1,20,3,20,194,8,20,1,21,1,21,1,21,3,21,199,8,21,1,21,3,21,202,8,
        21,1,21,1,21,1,21,1,21,3,21,208,8,21,1,21,3,21,211,8,21,1,21,1,21,
        1,21,3,21,216,8,21,1,21,1,21,3,21,220,8,21,1,22,1,22,3,22,224,8,
        22,1,23,1,23,3,23,228,8,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,
        23,1,23,3,23,239,8,23,1,24,1,24,1,24,1,24,1,25,1,25,1,26,1,26,1,
        26,1,26,1,27,1,27,1,27,3,27,254,8,27,1,27,1,27,1,28,1,28,3,28,260,
        8,28,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,31,1,31,
        1,32,1,32,3,32,276,8,32,1,32,1,32,1,32,5,32,281,8,32,10,32,12,32,
        284,9,32,1,32,1,32,1,32,1,32,3,32,290,8,32,1,33,1,33,4,33,294,8,
        33,11,33,12,33,295,1,34,1,34,3,34,300,8,34,1,34,1,34,1,34,5,34,305,
        8,34,10,34,12,34,308,9,34,1,34,1,34,1,34,1,34,3,34,314,8,34,1,35,
        4,35,317,8,35,11,35,12,35,318,0,0,36,1,1,3,2,5,3,7,0,9,0,11,0,13,
        4,15,5,17,0,19,0,21,0,23,6,25,0,27,0,29,0,31,0,33,0,35,0,37,0,39,
        0,41,0,43,0,45,0,47,0,49,0,51,0,53,0,55,0,57,0,59,0,61,0,63,0,65,
        7,67,8,69,0,71,9,1,0,5,9,0,44,44,98,100,102,103,106,110,112,112,
        114,116,118,118,120,120,122,122,6,0,97,97,101,101,105,105,111,111,
        117,117,121,121,2,0,9,9,32,32,2,0,108,108,113,114,3,0,9,10,13,13,
        32,32,338,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,13,1,0,0,0,0,15,
        1,0,0,0,0,23,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,71,1,0,0,0,1,73,
        1,0,0,0,3,75,1,0,0,0,5,78,1,0,0,0,7,91,1,0,0,0,9,93,1,0,0,0,11,95,
        1,0,0,0,13,97,1,0,0,0,15,101,1,0,0,0,17,105,1,0,0,0,19,107,1,0,0,
        0,21,113,1,0,0,0,23,126,1,0,0,0,25,128,1,0,0,0,27,134,1,0,0,0,29,
        139,1,0,0,0,31,143,1,0,0,0,33,149,1,0,0,0,35,156,1,0,0,0,37,160,
        1,0,0,0,39,174,1,0,0,0,41,188,1,0,0,0,43,219,1,0,0,0,45,223,1,0,
        0,0,47,238,1,0,0,0,49,240,1,0,0,0,51,244,1,0,0,0,53,246,1,0,0,0,
        55,250,1,0,0,0,57,259,1,0,0,0,59,261,1,0,0,0,61,266,1,0,0,0,63,271,
        1,0,0,0,65,289,1,0,0,0,67,291,1,0,0,0,69,313,1,0,0,0,71,316,1,0,
        0,0,73,74,5,13,0,0,74,2,1,0,0,0,75,76,5,10,0,0,76,4,1,0,0,0,77,79,
        5,46,0,0,78,77,1,0,0,0,78,79,1,0,0,0,79,83,1,0,0,0,80,82,3,7,3,0,
        81,80,1,0,0,0,82,85,1,0,0,0,83,81,1,0,0,0,83,84,1,0,0,0,84,86,1,
        0,0,0,85,83,1,0,0,0,86,87,3,9,4,0,87,88,5,46,0,0,88,6,1,0,0,0,89,
        92,3,9,4,0,90,92,3,11,5,0,91,89,1,0,0,0,91,90,1,0,0,0,92,8,1,0,0,
        0,93,94,7,0,0,0,94,10,1,0,0,0,95,96,7,1,0,0,96,12,1,0,0,0,97,98,
        7,2,0,0,98,99,1,0,0,0,99,100,6,6,0,0,100,14,1,0,0,0,101,102,3,17,
        8,0,102,16,1,0,0,0,103,106,3,19,9,0,104,106,3,21,10,0,105,103,1,
        0,0,0,105,104,1,0,0,0,106,18,1,0,0,0,107,108,3,9,4,0,108,109,3,11,
        5,0,109,110,3,9,4,0,110,111,3,9,4,0,111,112,3,11,5,0,112,20,1,0,
        0,0,113,114,3,9,4,0,114,115,3,9,4,0,115,116,3,11,5,0,116,117,3,9,
        4,0,117,118,3,11,5,0,118,22,1,0,0,0,119,127,3,25,12,0,120,127,3,
        27,13,0,121,127,3,29,14,0,122,127,3,31,15,0,123,127,3,33,16,0,124,
        127,3,35,17,0,125,127,3,37,18,0,126,119,1,0,0,0,126,120,1,0,0,0,
        126,121,1,0,0,0,126,122,1,0,0,0,126,123,1,0,0,0,126,124,1,0,0,0,
        126,125,1,0,0,0,127,24,1,0,0,0,128,129,3,39,19,0,129,130,3,63,31,
        0,130,131,3,41,20,0,131,26,1,0,0,0,132,135,3,39,19,0,133,135,3,43,
        21,0,134,132,1,0,0,0,134,133,1,0,0,0,135,137,1,0,0,0,136,138,3,41,
        20,0,137,136,1,0,0,0,137,138,1,0,0,0,138,28,1,0,0,0,139,140,3,45,
        22,0,140,141,3,63,31,0,141,142,3,41,20,0,142,30,1,0,0,0,143,144,
        3,47,23,0,144,145,3,63,31,0,145,146,3,41,20,0,146,32,1,0,0,0,147,
        150,3,49,24,0,148,150,3,53,26,0,149,147,1,0,0,0,149,148,1,0,0,0,
        150,152,1,0,0,0,151,153,3,51,25,0,152,151,1,0,0,0,152,153,1,0,0,
        0,153,154,1,0,0,0,154,155,3,15,7,0,155,34,1,0,0,0,156,157,3,55,27,
        0,157,158,3,51,25,0,158,159,3,19,9,0,159,36,1,0,0,0,160,162,3,55,
        27,0,161,163,3,51,25,0,162,161,1,0,0,0,162,163,1,0,0,0,163,164,1,
        0,0,0,164,165,3,21,10,0,165,38,1,0,0,0,166,168,3,49,24,0,167,169,
        3,51,25,0,168,167,1,0,0,0,168,169,1,0,0,0,169,175,1,0,0,0,170,175,
        3,53,26,0,171,172,3,55,27,0,172,173,3,51,25,0,173,175,1,0,0,0,174,
        166,1,0,0,0,174,170,1,0,0,0,174,171,1,0,0,0,175,176,1,0,0,0,176,
        177,3,49,24,0,177,40,1,0,0,0,178,180,3,49,24,0,179,181,3,63,31,0,
        180,179,1,0,0,0,180,181,1,0,0,0,181,187,1,0,0,0,182,183,3,45,22,
        0,183,184,3,63,31,0,184,187,1,0,0,0,185,187,3,57,28,0,186,178,1,
        0,0,0,186,182,1,0,0,0,186,185,1,0,0,0,187,190,1,0,0,0,188,186,1,
        0,0,0,188,189,1,0,0,0,189,193,1,0,0,0,190,188,1,0,0,0,191,194,3,
        57,28,0,192,194,3,17,8,0,193,191,1,0,0,0,193,192,1,0,0,0,194,42,
        1,0,0,0,195,199,3,49,24,0,196,199,3,53,26,0,197,199,3,55,27,0,198,
        195,1,0,0,0,198,196,1,0,0,0,198,197,1,0,0,0,199,201,1,0,0,0,200,
        202,3,51,25,0,201,200,1,0,0,0,201,202,1,0,0,0,202,203,1,0,0,0,203,
        204,3,53,26,0,204,220,1,0,0,0,205,208,3,49,24,0,206,208,3,53,26,
        0,207,205,1,0,0,0,207,206,1,0,0,0,208,210,1,0,0,0,209,211,3,51,25,
        0,210,209,1,0,0,0,210,211,1,0,0,0,211,216,1,0,0,0,212,213,3,55,27,
        0,213,214,3,51,25,0,214,216,1,0,0,0,215,207,1,0,0,0,215,212,1,0,
        0,0,216,217,1,0,0,0,217,218,3,55,27,0,218,220,1,0,0,0,219,198,1,
        0,0,0,219,215,1,0,0,0,220,44,1,0,0,0,221,224,3,59,29,0,222,224,3,
        61,30,0,223,221,1,0,0,0,223,222,1,0,0,0,224,46,1,0,0,0,225,227,3,
        49,24,0,226,228,3,51,25,0,227,226,1,0,0,0,227,228,1,0,0,0,228,229,
        1,0,0,0,229,230,3,45,22,0,230,239,1,0,0,0,231,232,3,57,28,0,232,
        233,3,51,25,0,233,234,3,59,29,0,234,239,1,0,0,0,235,236,3,57,28,
        0,236,237,3,61,30,0,237,239,1,0,0,0,238,225,1,0,0,0,238,231,1,0,
        0,0,238,235,1,0,0,0,239,48,1,0,0,0,240,241,3,9,4,0,241,242,3,11,
        5,0,242,243,3,9,4,0,243,50,1,0,0,0,244,245,7,3,0,0,245,52,1,0,0,
        0,246,247,3,9,4,0,247,248,3,9,4,0,248,249,3,11,5,0,249,54,1,0,0,
        0,250,251,3,9,4,0,251,253,3,11,5,0,252,254,5,39,0,0,253,252,1,0,
        0,0,253,254,1,0,0,0,254,255,1,0,0,0,255,256,3,11,5,0,256,56,1,0,
        0,0,257,260,3,55,27,0,258,260,3,53,26,0,259,257,1,0,0,0,259,258,
        1,0,0,0,260,58,1,0,0,0,261,262,3,9,4,0,262,263,3,11,5,0,263,264,
        3,9,4,0,264,265,3,9,4,0,265,60,1,0,0,0,266,267,3,9,4,0,267,268,3,
        9,4,0,268,269,3,11,5,0,269,270,3,9,4,0,270,62,1,0,0,0,271,272,5,
        121,0,0,272,64,1,0,0,0,273,276,5,46,0,0,274,276,3,9,4,0,275,273,
        1,0,0,0,275,274,1,0,0,0,276,277,1,0,0,0,277,282,3,11,5,0,278,281,
        5,39,0,0,279,281,3,11,5,0,280,278,1,0,0,0,280,279,1,0,0,0,281,284,
        1,0,0,0,282,280,1,0,0,0,282,283,1,0,0,0,283,290,1,0,0,0,284,282,
        1,0,0,0,285,286,3,9,4,0,286,287,5,121,0,0,287,288,5,46,0,0,288,290,
        1,0,0,0,289,275,1,0,0,0,289,285,1,0,0,0,290,66,1,0,0,0,291,293,3,
        69,34,0,292,294,3,69,34,0,293,292,1,0,0,0,294,295,1,0,0,0,295,293,
        1,0,0,0,295,296,1,0,0,0,296,68,1,0,0,0,297,300,5,46,0,0,298,300,
        3,9,4,0,299,297,1,0,0,0,299,298,1,0,0,0,300,301,1,0,0,0,301,306,
        3,11,5,0,302,305,5,39,0,0,303,305,3,11,5,0,304,302,1,0,0,0,304,303,
        1,0,0,0,305,308,1,0,0,0,306,304,1,0,0,0,306,307,1,0,0,0,307,314,
        1,0,0,0,308,306,1,0,0,0,309,310,3,9,4,0,310,311,5,121,0,0,311,312,
        5,46,0,0,312,314,1,0,0,0,313,299,1,0,0,0,313,309,1,0,0,0,314,70,
        1,0,0,0,315,317,8,4,0,0,316,315,1,0,0,0,317,318,1,0,0,0,318,316,
        1,0,0,0,318,319,1,0,0,0,319,72,1,0,0,0,38,0,78,83,91,105,126,134,
        137,149,152,162,168,174,180,186,188,193,198,201,207,210,215,219,
        223,227,238,253,259,275,280,282,289,295,299,304,306,313,318,1,6,
        0,0
    ]

class ColorLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    CMENE = 3
    WS = 4
    GISMU = 5
    LUJVO = 6
    CMAVO = 7
    COMPMO = 8
    FUHIVLA = 9

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'\\r'", "'\\n'" ]

    symbolicNames = [ "<INVALID>",
            "CMENE", "WS", "GISMU", "LUJVO", "CMAVO", "COMPMO", "FUHIVLA" ]

    ruleNames = [ "T__0", "T__1", "CMENE", "L", "C", "V", "WS", "GISMU", 
                  "GISUM", "CAGISMU", "CKAGISMU", "LUJVO", "BOBVO", "COBVO", 
                  "DOBVO", "FOBVO", "GOBVO", "JOBVO", "KOBVO", "RAFPAIRCON", 
                  "TAILVO", "RAFPAIRVOW", "STUMP", "RAFSTUMP", "BALRAF", 
                  "Q", "BRORAF", "BAURAF", "VURAF", "CASTUMP", "CKSTUMP", 
                  "Y", "CMAVO", "COMPMO", "CMAV", "FUHIVLA" ]

    grammarFileName = "Color.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


