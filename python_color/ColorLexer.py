# Generated from Color.g4 by ANTLR 4.10.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,5,227,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,
        7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
        2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,1,0,1,0,1,1,1,
        1,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,
        3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,3,3,80,8,3,1,4,1,4,1,4,1,4,1,4,
        3,4,87,8,4,1,5,1,5,1,5,1,5,1,6,1,6,3,6,95,8,6,1,6,3,6,98,8,6,1,7,
        1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,3,9,115,
        8,9,1,9,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,3,12,126,8,12,1,12,
        1,12,1,12,1,12,3,12,132,8,12,1,12,1,12,1,13,1,13,1,14,1,14,3,14,
        140,8,14,1,14,1,14,1,14,1,14,5,14,146,8,14,10,14,12,14,149,9,14,
        1,14,1,14,3,14,153,8,14,1,15,1,15,1,15,3,15,158,8,15,1,15,3,15,161,
        8,15,1,15,1,15,1,15,1,15,3,15,167,8,15,1,15,1,15,1,15,3,15,172,8,
        15,1,15,1,15,3,15,176,8,15,1,16,1,16,3,16,180,8,16,1,17,1,17,3,17,
        184,8,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,3,17,195,8,
        17,1,18,1,18,1,18,1,18,1,19,1,19,1,20,1,20,1,20,1,20,1,21,1,21,1,
        21,3,21,210,8,21,1,21,1,21,1,22,1,22,3,22,216,8,22,1,23,1,23,1,23,
        1,23,1,23,1,24,1,24,1,24,1,24,1,24,0,0,25,1,1,3,2,5,3,7,4,9,5,11,
        0,13,0,15,0,17,0,19,0,21,0,23,0,25,0,27,0,29,0,31,0,33,0,35,0,37,
        0,39,0,41,0,43,0,45,0,47,0,49,0,1,0,3,2,0,9,9,32,32,8,0,98,100,102,
        103,106,110,112,112,114,116,118,118,120,120,122,122,5,0,97,97,101,
        101,105,105,111,111,117,117,242,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,
        0,0,0,7,1,0,0,0,0,9,1,0,0,0,1,51,1,0,0,0,3,53,1,0,0,0,5,55,1,0,0,
        0,7,79,1,0,0,0,9,86,1,0,0,0,11,88,1,0,0,0,13,94,1,0,0,0,15,99,1,
        0,0,0,17,103,1,0,0,0,19,107,1,0,0,0,21,119,1,0,0,0,23,121,1,0,0,
        0,25,131,1,0,0,0,27,135,1,0,0,0,29,147,1,0,0,0,31,175,1,0,0,0,33,
        179,1,0,0,0,35,194,1,0,0,0,37,196,1,0,0,0,39,200,1,0,0,0,41,202,
        1,0,0,0,43,206,1,0,0,0,45,215,1,0,0,0,47,217,1,0,0,0,49,222,1,0,
        0,0,51,52,5,13,0,0,52,2,1,0,0,0,53,54,5,10,0,0,54,4,1,0,0,0,55,56,
        7,0,0,0,56,57,1,0,0,0,57,58,6,2,0,0,58,6,1,0,0,0,59,60,5,112,0,0,
        60,80,5,97,0,0,61,62,5,114,0,0,62,80,5,101,0,0,63,64,5,99,0,0,64,
        80,5,105,0,0,65,66,5,118,0,0,66,80,5,111,0,0,67,68,5,109,0,0,68,
        80,5,117,0,0,69,70,5,120,0,0,70,80,5,97,0,0,71,72,5,122,0,0,72,80,
        5,101,0,0,73,74,5,98,0,0,74,80,5,105,0,0,75,76,5,115,0,0,76,80,5,
        111,0,0,77,78,5,110,0,0,78,80,5,111,0,0,79,59,1,0,0,0,79,61,1,0,
        0,0,79,63,1,0,0,0,79,65,1,0,0,0,79,67,1,0,0,0,79,69,1,0,0,0,79,71,
        1,0,0,0,79,73,1,0,0,0,79,75,1,0,0,0,79,77,1,0,0,0,80,8,1,0,0,0,81,
        87,3,11,5,0,82,87,3,13,6,0,83,87,3,15,7,0,84,87,3,17,8,0,85,87,3,
        19,9,0,86,81,1,0,0,0,86,82,1,0,0,0,86,83,1,0,0,0,86,84,1,0,0,0,86,
        85,1,0,0,0,87,10,1,0,0,0,88,89,3,25,12,0,89,90,3,27,13,0,90,91,3,
        29,14,0,91,12,1,0,0,0,92,95,3,25,12,0,93,95,3,31,15,0,94,92,1,0,
        0,0,94,93,1,0,0,0,95,97,1,0,0,0,96,98,3,29,14,0,97,96,1,0,0,0,97,
        98,1,0,0,0,98,14,1,0,0,0,99,100,3,33,16,0,100,101,3,27,13,0,101,
        102,3,29,14,0,102,16,1,0,0,0,103,104,3,35,17,0,104,105,3,27,13,0,
        105,106,3,29,14,0,106,18,1,0,0,0,107,114,3,21,10,0,108,109,3,21,
        10,0,109,110,3,23,11,0,110,115,1,0,0,0,111,112,3,23,11,0,112,113,
        3,21,10,0,113,115,1,0,0,0,114,108,1,0,0,0,114,111,1,0,0,0,115,116,
        1,0,0,0,116,117,3,21,10,0,117,118,3,23,11,0,118,20,1,0,0,0,119,120,
        7,1,0,0,120,22,1,0,0,0,121,122,7,2,0,0,122,24,1,0,0,0,123,125,3,
        37,18,0,124,126,3,39,19,0,125,124,1,0,0,0,125,126,1,0,0,0,126,132,
        1,0,0,0,127,132,3,41,20,0,128,129,3,43,21,0,129,130,3,39,19,0,130,
        132,1,0,0,0,131,123,1,0,0,0,131,127,1,0,0,0,131,128,1,0,0,0,132,
        133,1,0,0,0,133,134,3,37,18,0,134,26,1,0,0,0,135,136,5,121,0,0,136,
        28,1,0,0,0,137,139,3,37,18,0,138,140,3,27,13,0,139,138,1,0,0,0,139,
        140,1,0,0,0,140,146,1,0,0,0,141,142,3,33,16,0,142,143,3,27,13,0,
        143,146,1,0,0,0,144,146,3,45,22,0,145,137,1,0,0,0,145,141,1,0,0,
        0,145,144,1,0,0,0,146,149,1,0,0,0,147,145,1,0,0,0,147,148,1,0,0,
        0,148,152,1,0,0,0,149,147,1,0,0,0,150,153,3,45,22,0,151,153,3,19,
        9,0,152,150,1,0,0,0,152,151,1,0,0,0,153,30,1,0,0,0,154,158,3,37,
        18,0,155,158,3,41,20,0,156,158,3,43,21,0,157,154,1,0,0,0,157,155,
        1,0,0,0,157,156,1,0,0,0,158,160,1,0,0,0,159,161,3,39,19,0,160,159,
        1,0,0,0,160,161,1,0,0,0,161,162,1,0,0,0,162,163,3,41,20,0,163,176,
        1,0,0,0,164,166,3,37,18,0,165,167,3,39,19,0,166,165,1,0,0,0,166,
        167,1,0,0,0,167,172,1,0,0,0,168,169,3,45,22,0,169,170,3,39,19,0,
        170,172,1,0,0,0,171,164,1,0,0,0,171,168,1,0,0,0,172,173,1,0,0,0,
        173,174,3,43,21,0,174,176,1,0,0,0,175,157,1,0,0,0,175,171,1,0,0,
        0,176,32,1,0,0,0,177,180,3,47,23,0,178,180,3,49,24,0,179,177,1,0,
        0,0,179,178,1,0,0,0,180,34,1,0,0,0,181,183,3,37,18,0,182,184,3,39,
        19,0,183,182,1,0,0,0,183,184,1,0,0,0,184,185,1,0,0,0,185,186,3,33,
        16,0,186,195,1,0,0,0,187,188,3,45,22,0,188,189,3,39,19,0,189,190,
        3,47,23,0,190,195,1,0,0,0,191,192,3,45,22,0,192,193,3,49,24,0,193,
        195,1,0,0,0,194,181,1,0,0,0,194,187,1,0,0,0,194,191,1,0,0,0,195,
        36,1,0,0,0,196,197,3,21,10,0,197,198,3,23,11,0,198,199,3,21,10,0,
        199,38,1,0,0,0,200,201,5,113,0,0,201,40,1,0,0,0,202,203,3,21,10,
        0,203,204,3,21,10,0,204,205,3,23,11,0,205,42,1,0,0,0,206,207,3,21,
        10,0,207,209,3,23,11,0,208,210,5,39,0,0,209,208,1,0,0,0,209,210,
        1,0,0,0,210,211,1,0,0,0,211,212,3,23,11,0,212,44,1,0,0,0,213,216,
        3,43,21,0,214,216,3,41,20,0,215,213,1,0,0,0,215,214,1,0,0,0,216,
        46,1,0,0,0,217,218,3,21,10,0,218,219,3,23,11,0,219,220,3,21,10,0,
        220,221,3,21,10,0,221,48,1,0,0,0,222,223,3,21,10,0,223,224,3,21,
        10,0,224,225,3,23,11,0,225,226,3,21,10,0,226,50,1,0,0,0,22,0,79,
        86,94,97,114,125,131,139,145,147,152,157,160,166,171,175,179,183,
        194,209,215,1,6,0,0
    ]

class ColorLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    WS = 3
    PA = 4
    LUJVO = 5

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'\\r'", "'\\n'" ]

    symbolicNames = [ "<INVALID>",
            "WS", "PA", "LUJVO" ]

    ruleNames = [ "T__0", "T__1", "WS", "PA", "LUJVO", "BOBVO", "COBVO", 
                  "DOBVO", "FOBVO", "GISMU", "C", "V", "RAFPAIRCON", "Y", 
                  "TAILVO", "RAFPAIRVOW", "STUMP", "RAFSTUMP", "BALRAF", 
                  "Q", "BRORAF", "BAURAF", "VURAF", "CASTUMP", "CKSTUMP" ]

    grammarFileName = "Color.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


